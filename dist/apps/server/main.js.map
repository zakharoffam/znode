{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA,uDAAwC;AACxC,uDAA8C;AAC9C,mEAAyD;AACzD,2CAA4B;AAC5B,qEAA+C;AAE/C,uFAAyD;AAezD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IAbrB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY,CAAC,OAAO,EAAE;YACtB,gCAAiB,CAAC,OAAO,CAAC;gBACxB,QAAQ,EAAE,eAAI,EAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC;aAC1C,CAAC;YACF,uBAAa;YACb,cAAc;YACd,2BAAW;SACZ;QACD,WAAW,EAAE,EAAE;QACf,SAAS,EAAE,EAAE;KACd,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;;;;;ACrBtB,oGAAqC;AAGrC,6EAA6E;AAC7E,0GAA2C;AAC3C,mHAAoD;AACpD,0GAA2C;;;;;;;;;;;;ACN3C,iDAAoG;AACpG,iEAAmD;AACnD,4FAA2C;AAG3C,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,oBAAU;CAWzC;AATC;IADC,oCAAsB,GAAE;;sCACd;AAKX;IAHC,8BAAQ,GAAE;IACV,4BAAM,EAAC,CAAC,EAAE,EAAE,CAAC;IACb,oBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;yCACzD;AAGd;IADC,wBAAU,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;;yCAC7B;AAVT,UAAU;IADtB,oBAAM,EAAC,OAAO,CAAC;GACH,UAAU,CAWtB;AAXY,gCAAU;;;;;;;;;;;;;ACLvB,iDAAmG;AACnG,6CAAiC;AACjC,4FAA2C;AAC3C,uDAAqD;AAGrD,IAAa,kBAAkB,0BAA/B,MAAa,kBAAmB,SAAQ,oBAAU;IAYhD;;;;OAIG;IACH,MAAM,CAAO,WAAW,CAAC,IAAgB,EAAE,QAAgB;;YACzD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;gBAC/C,MAAM,IAAI,4BAAmB,CAAC,+CAA+C,EAAE,kCAAkC,CAAC,CAAC;aACpH;YACD,IAAI,YAAY,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,CAAC,CAAC;YAChE,IAAI,YAAY,EAAE;gBAChB,YAAY,CAAC,cAAc,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1D,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC9B,OAAO;aACR;YACD,YAAY,GAAG,IAAI,oBAAkB,EAAE,CAAC;YACxC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;YACzB,YAAY,CAAC,cAAc,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1D,OAAO;QACT,CAAC;KAAA;IAGD;;;;OAIG;IACH,MAAM,CAAO,gBAAgB,CAAC,IAAgB,EAAE,QAAgB;;YAC9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,MAAM;gBAAE,OAAO,KAAK,CAAC;YAC1B,OAAO,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QAC9D,CAAC;KAAA;CACF;AA1CC;IADC,oCAAsB,GAAE;;8CACd;AAIX;IAFC,sBAAQ,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjD,wBAAU,GAAE;+DACP,wBAAU,oBAAV,wBAAU;gDAAC;AAGjB;IADC,oBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;0DACnC;AATZ,kBAAkB;IAD9B,oBAAM,EAAC,eAAe,CAAC;GACX,kBAAkB,CA4C9B;AA5CY,gDAAkB;;;;;;;;;;;;;ACN/B,iDASiB;AACjB,iEAA6F;AAC7F,uDAAwG;AACxG,8GAA4D;AAE5D,4FAA2C;AAI3C,IAAa,UAAU,kBAAvB,MAAa,UAAW,SAAQ,oBAAU;IA8BxC;;;;;OAKG;IACH,MAAM,CAAO,UAAU,CAAC,KAAa,EAAE,IAAY,EAAE,QAAgB;;YACnE,eAAM,CAAC,GAAG,CAAC,+BAA+B,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;YACxF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAC,CAAC,CAAC;YAClE,IAAI,UAAU,EAAE;gBACd,eAAM,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;gBAC3E,MAAM,IAAI,4BAAmB,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;aAClD;YACD,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,CAAC,CAAC;YAC1E,IAAI,IAAI,GAAG,IAAI,YAAU,EAAE,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,IAAI,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,sBAAsB,GAAG,CAAC,EAAE,CAAC;YACvF,MAAM,sBAAsB,GAAG,MAAM,8BAAQ,EAAC,IAAI,CAAC,CAAC;YACpD,IAAI,sBAAsB,CAAC,MAAM,EAAE;gBACjC,eAAM,CAAC,IAAI,CAAC,GAAG,sBAAsB,EAAE,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;gBACrF,MAAM,IAAI,4BAAmB,CAAC,sBAAsB,CAAC,CAAC;aACvD;YACD,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI;gBACF,MAAM,yCAAkB,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aACtD;YAAC,OAAO,GAAG,EAAE;gBACZ,eAAM,CAAC,IAAI,CAAC,6DAA6D,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;gBACvH,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM,IAAI,4BAAmB,CAAC,GAAG,CAAC,CAAC;aACpC;YAED,4FAA4F;YAC5F,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;YAC7C,IAAI,iBAAiB,KAAK,CAAC,EAAE;gBAC3B,eAAM,CAAC,GAAG,CAAC,wCAAwC,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;gBACjG,eAAM,CAAC,GAAG,CAAC,2DAA2D,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;gBACpH,IAAI,SAAS,GAAG,IAAI,wBAAU,EAAE,CAAC;gBACjC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC;gBAC1B,SAAS,GAAG,MAAM,wBAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC7C,eAAM,CAAC,GAAG,CAAC,+BAA+B,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;gBAExF,MAAM,QAAQ,GAAG,IAAI,wBAAU,EAAE,CAAC;gBAClC,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC;gBACxB,MAAM,wBAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAChC,eAAM,CAAC,GAAG,CAAC,8BAA8B,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;gBAEvF,IAAI,CAAC,KAAK,GAAG,CAAC,SAAS,CAAC,CAAC;gBACzB,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,eAAM,CAAC,GAAG,CAAC,gBAAgB,IAAI,kCAAkC,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;aAChH;YAED,MAAM,QAAQ,GAAG,MAAM,wBAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAC,CAAC,CAAC;YACvE,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACvC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,eAAM,CAAC,GAAG,CAAC,gBAAgB,IAAI,iCAAiC,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;YAC9G,eAAM,CAAC,GAAG,CAAC,gBAAgB,IAAI,2BAA2B,EAAE,yBAAyB,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;YACxG,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAGD;;;OAGG;IACH,MAAM,CAAO,cAAc,CAAC,KAAa;;YACvC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,IAAI,8BAAqB,EAAE,CAAC;aACnC;YACD,IAAI,CAAC,OAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,GAAE;gBACrB,MAAM,IAAI,2BAAkB,EAAE,CAAC;aAChC;YACD,OAAO;gBACL,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;aAClB,CAAC;QACJ,CAAC;KAAA;CACF;AAvGC;IAHC,6BAAO,GAAE;IACT,4BAAM,EAAC,CAAC,EAAE,GAAG,CAAC;IACd,2BAAa,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;yCAChD;AAKd;IAHC,8BAAQ,GAAE;IACV,4BAAM,EAAC,CAAC,EAAE,GAAG,CAAC;IACd,oBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;wCAC3D;AAKb;IAHC,gCAAU,GAAE;IACZ,+BAAS,GAAE;IACX,oBAAM,EAAC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;4CAC1C;AAGlB;IADC,8BAAgB,GAAE;+DACF,IAAI,oBAAJ,IAAI;mDAAC;AAGtB;IADC,8BAAgB,GAAE;+DACF,IAAI,oBAAJ,IAAI;mDAAC;AAGtB;IADC,sBAAQ,EAAC,GAAG,EAAE,CAAC,yCAAkB,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;+DACpD,yCAAkB,oBAAlB,yCAAkB;4CAAC;AAI7B;IAFC,wBAAU,EAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;IAClD,uBAAS,GAAE;;yCACQ;AA3BT,UAAU;IADtB,oBAAM,EAAC,OAAO,CAAC;GACH,UAAU,CA2GtB;AA3GY,gCAAU;;;;;;;;;;;;AClBvB,uDAAwC;AACxC,yDAAgD;AAChD,0DAA2C;AAO3C,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAG;AAAhB,aAAa;IALzB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,OAAO,CAAC,mBAAM,CAAC;SAC9B;KACF,CAAC;GACW,aAAa,CAAG;AAAhB,sCAAa;;;;;;;;;;;ACT1B,8GAAmC;AAEnC,qHAA0C;;;;;;;;;;;;ACF1C,iEAA4D;AAE5D,MAAa,aAAa;CAWzB;AATC;IADC,6BAAO,GAAE;;4CACI;AAId;IAFC,8BAAQ,GAAE;IACV,4BAAM,EAAC,CAAC,EAAE,GAAG,CAAC;;2CACF;AAIb;IAFC,8BAAQ,GAAE;IACV,4BAAM,EAAC,CAAC,EAAE,EAAE,CAAC;;+CACG;AAVnB,sCAWC;;;;;;;;;;;;;ACbD,uDAA6D;AAC7D,mGAA+C;AAC/C,2GAAsD;AAItD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAA6B,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAE3D;;;;;OAKG;IAEW,UAAU,CAAS,IAAmB;;YAClD,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClD,CAAC;KAAA;IAED;;;;OAIG;IAEW,WAAW;;YACvB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAChD,CAAC;KAAA;CACF;AAbC;IADC,iBAAI,GAAE;IACmB,yCAAI,GAAE;;sEAAO,+BAAa,oBAAb,+BAAa;qEAAG,OAAO,oBAAP,OAAO;iDAE7D;AAQD;IADC,gBAAG,GAAE;;;qEACuB,OAAO,oBAAP,OAAO;kDAEnC;AAtBU,eAAe;IAD3B,uBAAU,EAAC,OAAO,CAAC;sEAEyB,4BAAY,oBAAZ,4BAAY;GAD5C,eAAe,CAuB3B;AAvBY,0CAAe;;;;;;;;;;;;ACN5B,uDAAwC;AACxC,yDAAgD;AAChD,qEAAgE;AAChE,qEAA4C;AAC5C,yGAAqD;AACrD,mGAA+C;AAW/C,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAG;AAAd,WAAW;IATvB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,UAAU,CAAC;gBACvB,oBAAU,EAAE,4BAAkB,EAAE,oBAAU;aAC3C,CAAC;SACH;QACD,WAAW,EAAE,CAAC,kCAAe,CAAC;QAC9B,SAAS,EAAE,CAAC,4BAAY,CAAC;KAC1B,CAAC;GACW,WAAW,CAAG;AAAd,kCAAW;;;;;;;;;;;;AChBxB,uDAA4C;AAE5C,qEAA4C;AAG5C,IAAa,YAAY,GAAzB,MAAa,YAAY;IACvB;;;OAGG;IACU,UAAU,CAAC,IAAmB;;YACzC,OAAO,MAAM,oBAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3E,CAAC;KAAA;IAED;;OAEG;IACU,YAAY;;YACvB,OAAO,oBAAU,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnD,CAAC;KAAA;CACF;AAfY,YAAY;IADxB,uBAAU,GAAE;GACA,YAAY,CAexB;AAfY,oCAAY;;;;;;;;;;ACLzB,2CAA4B;AAG5B;;;GAGG;AACH,qBAAe,CAAC,GAA0B,EAAE;IAC1C,IAAI,KAAqC,EAAE,EA0B1C;SAAM;QACL,OAAO;YACL,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,KAAK;YAClB,aAAa,EAAE,CAAC;YAChB,gBAAgB,EAAE,IAAI;YACtB,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,MAAM;YACd,GAAG,EAAE;gBACH,aAAa,EAAE,eAAI,EAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC;aAC9E;YACD,QAAQ,EAAE;gBACR,eAAI,EAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,kBAAkB,CAAC;gBAChF,eAAI,EAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,kBAAkB,CAAC;aACvF;YACD,UAAU,EAAE;gBACV,eAAI,EAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAC,WAAW,CAAC;gBAC1E,eAAI,EAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,CAAC;aAClF;YACD,WAAW,EAAE;gBACX,eAAI,EAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAC,WAAW,CAAC;gBAC3E,eAAI,EAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,WAAW,CAAC;aACnF;SACF;KACF;AACH,CAAC,CAAC,EAAE,CAAC;;;;;;;;AC7DL;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBA,uDAAwD;AACxD,mDAA2C;AAC3C,4EAAyC;AACzC,uDAA+C;AAE/C,SAAe,SAAS;;QACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;QAChD,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,sBAAa,CAAC,CAAC;QAC7C,MAAM,IAAI,GAAG,MAAM,aAAa,CAAC,GAAG,CAAkB,MAAM,CAAC,CAAC;QAC9D,MAAM,YAAY,GAAG,KAAK,CAAC;QAE3B,qDAAqD;QACrD,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAElC,qEAAqE;QACrE,GAAG,CAAC,cAAc,CAAC,IAAI,uBAAc,EAAE,CAAC,CAAC;QAEzC,kBAAkB;QAClB,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,eAAM,CAAC,GAAG,CAAC,4BAA4B,aAAoB,0BAA0B,IAAI,IAAI,YAAY,EAAE,CAAC,CAAC;IAC/G,CAAC;CAAA;AAED,SAAS,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;IACxB,eAAM,CAAC,KAAK,CAAC,sCAAsC,EAAE,iBAAiB,CAAC,CAAC;IACxE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC","sources":["webpack://znode/./apps/server/src/app.module.ts","webpack://znode/./libs/storage/src/index.ts","webpack://znode/./libs/storage/src/lib/entities/role.entity.ts","webpack://znode/./libs/storage/src/lib/entities/user-password.entity.ts","webpack://znode/./libs/storage/src/lib/entities/user.entity.ts","webpack://znode/./libs/storage/src/lib/storage.module.ts","webpack://znode/./libs/users/server-module/src/index.ts","webpack://znode/./libs/users/server-module/src/lib/dto/create-user.dto.ts","webpack://znode/./libs/users/server-module/src/lib/users.controller.ts","webpack://znode/./libs/users/server-module/src/lib/users.module.ts","webpack://znode/./libs/users/server-module/src/lib/users.service.ts","webpack://znode/./ormconfig.ts","webpack://znode/external commonjs \"@nestjs/common\"","webpack://znode/external commonjs \"@nestjs/config\"","webpack://znode/external commonjs \"@nestjs/core\"","webpack://znode/external commonjs \"@nestjs/serve-static\"","webpack://znode/external commonjs \"@nestjs/typeorm\"","webpack://znode/external commonjs \"argon2\"","webpack://znode/external commonjs \"class-validator\"","webpack://znode/external commonjs \"tslib\"","webpack://znode/external commonjs \"typeorm\"","webpack://znode/external node-commonjs \"path\"","webpack://znode/webpack/bootstrap","webpack://znode/./apps/server/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { StorageModule } from '@znode/storage';\nimport { AuthModule } from '@znode/auth-server-module';\nimport { UsersModule } from \"@znode/users/server-module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client'),\n    }),\n    StorageModule,\n    // AuthModule,\n    UsersModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n","export * from './lib/storage.module';\n\n\n// COMMON - Role-based access control или Управление доступом на основе ролей\nexport * from './lib/entities/user.entity';\nexport * from './lib/entities/user-password.entity';\nexport * from './lib/entities/role.entity';\n","import { BaseEntity, Column, Entity, ManyToMany, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IsString, Length } from \"class-validator\";\nimport { UserEntity } from \"./user.entity\";\n\n@Entity('Roles')\nexport class RoleEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @IsString()\n  @Length(1, 50)\n  @Column({ type: 'varchar', length: 50, unique: true, nullable: false })\n  title: string;\n\n  @ManyToMany(() => UserEntity, user => user.roles)\n  users: UserEntity[];\n}\n","import { BaseEntity, Column, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport * as argon2 from \"argon2\";\nimport { UserEntity } from \"./user.entity\";\nimport { BadRequestException } from \"@nestjs/common\";\n\n@Entity('User_password')\nexport class UserPasswordEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @OneToOne(() => UserEntity, user => user.password)\n  @JoinColumn()\n  user: UserEntity;\n\n  @Column({ type: 'varchar', length: 512, nullable: false })\n  passwordHashed: string;\n\n\n  /**\n   * Установить пароля пользователя\n   * @param user\n   * @param password\n   */\n  static async setPassword(user: UserEntity, password: string): Promise<void> {\n    if (password.length < 8 || password.length > 64) {\n      throw new BadRequestException(`Длина пароля должна быть от 8 до 64 символов!`, `UserPasswordEntity.setPassword()`);\n    }\n    let userPassword = await this.findOne({ where: { user: user }});\n    if (userPassword) {\n      userPassword.passwordHashed = await argon2.hash(password);\n      await this.save(userPassword);\n      return;\n    }\n    userPassword = new UserPasswordEntity();\n    userPassword.user = user;\n    userPassword.passwordHashed = await argon2.hash(password);\n    return;\n  }\n\n\n  /**\n   * Это пароль пользователя?\n   * @param user\n   * @param password\n   */\n  static async isPasswordOfUser(user: UserEntity, password: string): Promise<boolean> {\n    const entity = await this.findOne({ where: { user: user }});\n    if (!entity) return false;\n    return await argon2.verify(entity.passwordHashed, password);\n  }\n}\n","import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity, ManyToMany,\n  OneToOne,\n  PrimaryColumn,\n  UpdateDateColumn,\n  JoinTable\n} from \"typeorm\";\nimport { IsBoolean, IsEmail, IsOptional, IsString, Length, validate } from \"class-validator\";\nimport { BadRequestException, ForbiddenException, Logger, UnauthorizedException } from \"@nestjs/common\";\nimport { UserPasswordEntity } from \"./user-password.entity\";\nimport { UserInterface } from \"../../../../common/interfaces/src\";\nimport { RoleEntity } from \"./role.entity\";\n\n\n@Entity('Users')\nexport class UserEntity extends BaseEntity {\n  @IsEmail()\n  @Length(1, 255)\n  @PrimaryColumn({ type: 'varchar', length: 255, unique: true })\n  email: string;\n\n  @IsString()\n  @Length(1, 255)\n  @Column({ type: 'varchar', length: 255, unique: true, nullable: false })\n  name: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @Column({ type: 'boolean', nullable: false, default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createTimestamp: Date;\n\n  @UpdateDateColumn()\n  updateTimestamp: Date;\n\n  @OneToOne(() => UserPasswordEntity, password => password.user)\n  password: UserPasswordEntity;\n\n  @ManyToMany(() => RoleEntity, roles => roles.users)\n  @JoinTable()\n  roles: RoleEntity[];\n\n\n  /**\n   * Создание нового пользователя\n   * @param email\n   * @param name\n   * @param password\n   */\n  static async createUser(email: string, name: string, password: string): Promise<UserEntity> {\n    Logger.log(`Создание нового пользователя.`, `UserEntity.createUser(${email}, ${name})`);\n    const checkEmail = await this.findOne({ where: { email: email }});\n    if (checkEmail) {\n      Logger.warn(`${email} занят!`, `UserEntity.createUser(${email}, ${name})`);\n      throw new BadRequestException(`${email} занят!`);\n    }\n    const countUsersWithSameName = await this.count({ where: { name: name }});\n    let user = new UserEntity();\n    user.email = email;\n    user.name = !countUsersWithSameName ? name : `${name} - ${countUsersWithSameName + 1}`;\n    const validateUserDataErrors = await validate(user);\n    if (validateUserDataErrors.length) {\n      Logger.warn(`${validateUserDataErrors}`, `UserEntity.createUser(${email}, ${name})`);\n      throw new BadRequestException(validateUserDataErrors);\n    }\n    user = await this.save(user);\n    try {\n      await UserPasswordEntity.setPassword(user, password);\n    } catch (err) {\n      Logger.warn(`Пароль не прошел валидацию! Создание пользователя прервано!`, `UserEntity.createUser(${email}, ${name})`);\n      await this.delete(user);\n      throw new BadRequestException(err);\n    }\n\n    // Если это первый пользователь приложения - инициализируем новые роли и пользователя-админа\n    const currentUsersCount = await this.count();\n    if (currentUsersCount === 1) {\n      Logger.log(`Создан первый пользователь приложения.`, `UserEntity.createUser(${email}, ${name})`);\n      Logger.log(`Инициализируем ролевую модель и назначаем администратора!`, `UserEntity.createUser(${email}, ${name})`);\n      let roleAdmin = new RoleEntity();\n      roleAdmin.title = 'admin';\n      roleAdmin = await RoleEntity.save(roleAdmin);\n      Logger.log(`Создана роль \"Администратор\".`, `UserEntity.createUser(${email}, ${name})`);\n\n      const roleUser = new RoleEntity();\n      roleUser.title = 'user';\n      await RoleEntity.save(roleUser);\n      Logger.log(`Создана роль \"Пользователь\".`, `UserEntity.createUser(${email}, ${name})`);\n\n      user.roles = [roleAdmin];\n      await this.save(user);\n      Logger.log(`Пользователю ${name} присвоена роль \"Администратор\".`, `UserEntity.createUser(${email}, ${name})`);\n    }\n\n    const roleUser = await RoleEntity.findOne({ where: { title: 'user' }});\n    user.roles = [...user.roles, roleUser];\n    await this.save(user);\n    Logger.log(`Пользователю ${name} присвоена роль \"Пользователь\".`, `UserEntity.createUser(${email}, ${name})`);\n    Logger.log(`Пользователь ${name} успешно зарегистрирован.`, `UserEntity.createUser(${email}, ${name})`);\n    return user;\n  }\n\n\n  /**\n   * Получить пользователя по email\n   * @param email\n   */\n  static async getUserByEmail(email: string): Promise<UserInterface> {\n    const entity = await this.findOne({where: {email: email}});\n    if (!entity) {\n      throw new UnauthorizedException();\n    }\n    if (!entity?.isActive) {\n      throw new ForbiddenException();\n    }\n    return {\n      email: entity.email,\n      name: entity.name,\n    };\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport config from '../../../../ormconfig';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(config),\n  ],\n})\nexport class StorageModule {}\n","export * from './lib/users.module';\n\nexport * from './lib/dto/create-user.dto';\n","import { IsEmail, IsString, Length } from \"class-validator\";\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @Length(1, 255)\n  name: string;\n\n  @IsString()\n  @Length(7, 64)\n  password: string;\n}\n","import { Body, Controller, Get, Post } from \"@nestjs/common\";\nimport { UsersService } from \"./users.service\";\nimport { CreateUserDto } from \"./dto/create-user.dto\";\nimport { UserEntity } from \"@znode/storage\";\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  /**\n   * Создание нового пользователя\n   * @url /api/users\n   * @param data\n   * @private\n   */\n  @Post()\n  private async createUser(@Body() data: CreateUserDto): Promise<UserEntity> {\n    return await this.usersService.createUser(data);\n  }\n\n  /**\n   * Получить список всех пользователей\n   * @url /api/users\n   * @private\n   */\n  @Get()\n  private async getAllUsers(): Promise<UserEntity[]> {\n    return await this.usersService.findAllUsers();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity, UserPasswordEntity } from \"@znode/storage\";\nimport { RoleEntity } from \"@znode/storage\";\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      UserEntity, UserPasswordEntity, RoleEntity,\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n","import { Injectable } from \"@nestjs/common\";\nimport { CreateUserDto } from \"./dto/create-user.dto\";\nimport { UserEntity } from \"@znode/storage\";\n\n@Injectable()\nexport class UsersService {\n  /**\n   * Создание пользователя\n   * @param data\n   */\n  public async createUser(data: CreateUserDto): Promise<UserEntity> {\n    return await UserEntity.createUser(data.email, data.name, data.password);\n  }\n\n  /**\n   * Найти всех пользователей\n   */\n  public async findAllUsers(): Promise<UserEntity[]> {\n    return UserEntity.find({ relations: ['roles'] });\n  }\n}\n","import { join } from 'path';\nimport { TypeOrmModuleOptions } from \"@nestjs/typeorm\";\n\n/**\n * Конфигурация подключения к СУБД\n * Данная конфигурация используется как для работы в рантайме, так и для работы с TypeORM CLI\n */\nexport default ((): TypeOrmModuleOptions  => {\n  if (process.env.NODE_ENV === 'production') {\n    return {\n      type: 'postgres',\n      url: process.env.DATABASE_URL,\n      ssl: {\n        rejectUnauthorized: false,\n      },\n      autoLoadEntities: true,\n      synchronize: false,\n      retryAttempts: 1,\n      cli: {\n        migrationsDir: join(__dirname, 'libs', 'storage', 'src', 'lib', 'migrations'),\n      },\n      entities: [\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'entities', '*.entity.{ts,js}'),\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'entities', '**', '*.entity.{ts,js}'),\n      ],\n      migrations: [\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'migrations','*.{ts,js}'),\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'migrations', '**', '*.{ts,js}'),\n      ],\n      subscribers: [\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'subscribers','*.{ts,js}'),\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'subscribers', '**', '*.{ts,js}'),\n      ],\n    }\n  } else {\n    return {\n      type: 'sqljs',\n      location: 'dev.db',\n      autoSave: true,\n      synchronize: false,\n      retryAttempts: 1,\n      autoLoadEntities: true,\n      logging: 'all',\n      logger: 'file',\n      cli: {\n        migrationsDir: join(__dirname, 'libs', 'storage', 'src', 'lib', 'migrations'),\n      },\n      entities: [\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'entities', '*.entity.{ts,js}'),\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'entities', '**', '*.entity.{ts,js}'),\n      ],\n      migrations: [\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'migrations','*.{ts,js}'),\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'migrations', '**', '*.{ts,js}'),\n      ],\n      subscribers: [\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'subscribers','*.{ts,js}'),\n        join(__dirname, 'libs', 'storage', 'src', 'lib', 'subscribers', '**', '*.{ts,js}'),\n      ],\n    }\n  }\n})();\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"argon2\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { ConfigService } from '@nestjs/config';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const configService = app.get(ConfigService);\n  const port = await configService.get<string | number>('PORT');\n  const globalPrefix = 'api';\n\n  // Инициализируем глобальный префикс для всех REST'ов\n  app.setGlobalPrefix(globalPrefix);\n\n  // Инициализируем глобальную валидацию всех входящих данных через DTO\n  app.useGlobalPipes(new ValidationPipe());\n\n  // Стартуем сервер\n  await app.listen(port);\n  Logger.log(`Сервер запущен в режиме \"${process.env.NODE_ENV}\" на: http://localhost:${port}/${globalPrefix}`);\n}\n\nbootstrap().catch((err) => {\n  Logger.error(`При запуске сервера возникла ошибка:`, `main.boostrap()`);\n  console.error(err);\n});\n"],"names":[],"sourceRoot":""}