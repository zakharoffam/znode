{"version":3,"file":"main.js","mappings":"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","sources":["webpack://uparm-automation/./apps/server/src/app.module.ts","webpack://uparm-automation/./libs/auth/common/src/index.ts","webpack://uparm-automation/./libs/auth/common/src/lib/user.interface.ts","webpack://uparm-automation/./libs/auth/server-module/src/index.ts","webpack://uparm-automation/./libs/auth/server-module/src/lib/auth-by-login.strategy.ts","webpack://uparm-automation/./libs/auth/server-module/src/lib/auth.controller.ts","webpack://uparm-automation/./libs/auth/server-module/src/lib/auth.middleware.ts","webpack://uparm-automation/./libs/auth/server-module/src/lib/auth.module.ts","webpack://uparm-automation/./libs/auth/server-module/src/lib/user.decarator.ts","webpack://uparm-automation/./libs/databases/src/index.ts","webpack://uparm-automation/./libs/databases/src/lib/databases.module.ts","webpack://uparm-automation/./libs/databases/src/lib/entities/user.entity.ts","webpack://uparm-automation/external commonjs \"@nestjs/common\"","webpack://uparm-automation/external commonjs \"@nestjs/config\"","webpack://uparm-automation/external commonjs \"@nestjs/core\"","webpack://uparm-automation/external commonjs \"@nestjs/serve-static\"","webpack://uparm-automation/external commonjs \"@nestjs/typeorm\"","webpack://uparm-automation/external commonjs \"class-validator\"","webpack://uparm-automation/external commonjs \"express-session\"","webpack://uparm-automation/external commonjs \"tslib\"","webpack://uparm-automation/external commonjs \"typeorm\"","webpack://uparm-automation/external node-commonjs \"path\"","webpack://uparm-automation/webpack/bootstrap","webpack://uparm-automation/./apps/server/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { ConfigModule } from \"@nestjs/config\";\nimport { ServeStaticModule } from \"@nestjs/serve-static\";\nimport { join } from 'path';\nimport { DatabasesModule } from \"@uparm-automation/databases\";\nimport { AuthModule } from \"@uparm-automation/auth/server-module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'web-client'),\n    }),\n    DatabasesModule,\n    AuthModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n","export * from './lib/user.interface';\n","export interface UserInterface {\n  id: number;\n  fullName: string;\n}\n","export * from './lib/auth.module';\nexport * from './lib/user.decarator';\n","import { ForbiddenException, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"@uparm-automation/databases\";\nimport { Repository } from \"typeorm\";\nimport { UserInterface } from \"@uparm-automation/auth/common\";\n\n@Injectable()\nexport class AuthByLoginStrategy {\n  constructor(@InjectRepository(UserEntity) private usersRepository: Repository<UserEntity>) {}\n\n  /**\n   * Стратегия авторизации пользователя по логину\n   * @param login\n   */\n  public async strategy(login: string): Promise<UserInterface | UnauthorizedException | ForbiddenException> {\n    const user = await this.usersRepository.findOne({ where: { login: login }});\n    if (!user) {\n      throw new UnauthorizedException('Unauthorized', `AuthStrategy.strategy(${login})`);\n    } else if (!user.isActive) {\n      throw new ForbiddenException('Доступ запрещен', `AuthStrategy.strategy(${login})`);\n    } else {\n      return user;\n    }\n  }\n}\n","import { Controller, Get, Logger, UnauthorizedException } from \"@nestjs/common\";\nimport { User } from \"./user.decarator\";\nimport { UserInterface } from \"@uparm-automation/auth/common\";\n\n@Controller('auth')\nexport class AuthController {\n  /**\n   * Метод возвращает данные авторизированного пользователя\n   * @url /api/auth/user\n   * @param user\n   * @private\n   */\n  @Get('user')\n  private getUser(@User() user: UserInterface): UserInterface {\n    if (!user) {\n      Logger.warn(`Не удалось аутентифицировать пользователя`, `AuthController.getUser(${user})`);\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n","import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction } from 'express';\nimport { AuthByLoginStrategy } from \"./auth-by-login.strategy\";\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private authByLoginStrategy: AuthByLoginStrategy) {}\n\n  /**\n   * Промежуточный обработчик аутентификации пользователя\n   * @param req\n   * @param res\n   * @param next\n   */\n  async use(req: any, res: any, next: NextFunction) {\n    if (!req.session.cookie.user) {\n      const login = req.headers['X_AUTH_USER'] ?? process.env.USER;\n      req.session.cookie.user = await this.authByLoginStrategy.strategy(login);\n    }\n    next();\n  }\n}\n","import { MiddlewareConsumer, Module, NestModule, RequestMethod } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"@uparm-automation/databases\";\nimport { AuthController } from \"./auth.controller\";\nimport { AuthByLoginStrategy } from \"./auth-by-login.strategy\";\nimport { AuthMiddleware } from \"./auth.middleware\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthByLoginStrategy],\n})\nexport class AuthModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): any {\n    consumer.apply(AuthMiddleware).forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n","import { createParamDecorator, ExecutionContext } from \"@nestjs/common\";\n\n/**\n * Декоратор пользователя\n * Возможно передать в качестве аргумента имя параметра например - @User('login')\n */\nexport const User = createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.session.cookie.user;\n    return data ? user?.[data] : user;\n  }\n);\n","export * from './lib/databases.module';\n\n// Сущности\nexport * from './lib/entities/user.entity';\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      ssl: {\n        rejectUnauthorized: false,\n      },\n      host: process.env.DATABASE_HOST,\n      port: Number(process.env.DATABASE_PORT),\n      database: process.env.DATABASE_NAME,\n      username: process.env.DATABASE_USER,\n      password: process.env.DATABASE_PASSWORD,\n      autoLoadEntities: true,\n      synchronize: false,\n      retryAttempts: 3,\n      logging: process.env.DATABASE_LOGGER ? 'all' : false,\n      logger: 'file',\n    })\n  ]\n})\nexport class DatabasesModule {}\n","import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from \"typeorm\";\nimport { IsOptional, IsString, Length, MaxLength, MinLength } from \"class-validator\";\n\n@Entity('users')\nexport class UserEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @IsString()\n  @Length(5, 255)\n  @Column({ name: 'login', type: 'varchar', length: 255, unique: true })\n  login: string;\n\n  @IsString()\n  @MinLength(1)\n  @MaxLength(80)\n  @Column({ name: 'firstName', type: 'varchar', length: 80, nullable: false })\n  firstName: string;\n\n  @IsString()\n  @MinLength(1)\n  @MaxLength(80)\n  @Column({ name: 'lastName', type: 'varchar', length: 80, nullable: false })\n  lastName: string;\n\n  @IsOptional()\n  @IsString()\n  @MinLength(1)\n  @MaxLength(80)\n  @Column({ name: 'middleName', type: 'varchar', length: 80, nullable: true, default: null })\n  middleName: string;\n\n  @Column({ name: 'fullName', type: 'varchar', length: 255, nullable: false })\n  fullName: string;\n\n  @CreateDateColumn()\n  createDate: Date;\n\n  @UpdateDateColumn()\n  updateDate: Date;\n\n  @Column({ name: 'isActive', type: 'boolean', nullable: false, default: true })\n  isActive: boolean;\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"class-validator\");","module.exports = require(\"express-session\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { ConfigService } from \"@nestjs/config\";\nimport * as session from \"express-session\";\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const configService = app.get(ConfigService);\n  const port = await configService.get<string|number>('PORT');\n  const sessionSecret = await configService.get<string>('SESSION_SECRET');\n  const globalPrefix = 'api';\n\n  // Инициализируем глобальный префикс для всех REST'ов\n  app.setGlobalPrefix(globalPrefix);\n\n  // Промежуточный обработчик сессий\n  app.use(session({\n    secret: sessionSecret,\n    resave: false,\n    saveUninitialized: false,\n  }));\n\n  // Инициализируем глобальную валидацию всех входящих данных через DTO\n  app.useGlobalPipes(new ValidationPipe());\n\n  // Стартуем сервер\n  await app.listen(port);\n  Logger.log(`Сервер запущен: http://localhost:${port}/${globalPrefix}`);\n}\n\nbootstrap().catch(err => {\n  Logger.error(`При запуске сервера возникла ошибка:`, `main.boostrap()`);\n  console.error(err);\n});\n"],"names":[],"sourceRoot":""}